name: Update Nodes Daily

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch: {}

jobs:
  update-nodes:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          pip install pyyaml
          curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash -
          sudo apt-get install -y nodejs
          npm install puppeteer puppeteer-extra puppeteer-extra-plugin-stealth

      - name: Fetch latest subscription
        run: node fetch_sub.js

      - name: Decode base64 and generate URIs
        run: |
          python -c "
          import base64
          import yaml
          from urllib.parse import quote
          
          with open('raw-sub.txt', 'r') as f:
              content = f.read().strip()
          
          try:
              decoded = base64.b64decode(content).decode('utf-8')
              data = yaml.safe_load(decoded)
              proxies = data.get('proxies', [])
              print(f'Parsed {len(proxies)} proxies.')
          except Exception as e:
              print(f'Decode error: {e}')
              proxies = []
          
          with open('input_nodes.txt', 'w', encoding='utf-8') as f:
              for p in proxies:
                  if p.get('type') in ['vless', 'trojan']:
                      name = p.get('name', f'{p[\"type\"]} Unnamed')
                      if p['type'] == 'vless':
                          query_parts = []
                          if 'network' in p: query_parts.append(f'type={p[\"network\"]}')
                          if p.get('tls'): query_parts.append('security=tls')
                          if 'flow' in p: query_parts.append(f'flow={p[\"flow\"]}')
                          if 'sni' in p: query_parts.append(f'sni={p[\"sni\"]}')
                          if 'path' in p: query_parts.append(f'path={quote(p[\"path\"])}')
                          query = '&'.join(query_parts)
                          uri = f'vless://{quote(p[\"uuid\"])}@{p[\"server\"]}:{p[\"port\"]}?{query}#{name}' if query else f'vless://{quote(p[\"uuid\"])}@{p[\"server\"]}:{p[\"port\"]}#{name}'
                      elif p['type'] == 'trojan':
                          query_parts = []
                          if 'sni' in p: query_parts.append(f'sni={p[\"sni\"]}')
                          if 'network' in p: query_parts.append(f'type={p[\"network\"]}')
                          if 'path' in p: query_parts.append(f'path={quote(p[\"path\"])}')
                          query = '&'.join(query_parts)
                          uri = f'trojan://{quote(p[\"password\"])}@{p[\"server\"]}:{p[\"port\"]}?{query}#{name}' if query else f'trojan://{quote(p[\"password\"])}@{p[\"server\"]}:{p[\"port\"]}#{name}'
                      f.write(uri + '\n')
          
          num = sum(1 for line in open('input_nodes.txt') if line.strip())
          print(f'Generated {num} URIs to input_nodes.txt')
          "

      - name: Convert to YAML
        run: python node_converter.py input_nodes.txt nodes.yaml

      - name: Commit and push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add raw-sub.txt input_nodes.txt nodes.yaml || true
          git commit -m "Auto update nodes $(date -u +'%Y-%m-%d')" || echo "no changes"
          git push || echo "push failed"
